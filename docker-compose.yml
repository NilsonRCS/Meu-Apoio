services:
  # Banco de Dados Principal
  postgres:
    image: postgres:15
    container_name: meuapoio-postgres
    environment:
      POSTGRES_DB: meuapoio
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MongoDB para conte√∫do
  mongodb:
    image: mongo:7
    container_name: meuapoio-mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: mongo
      MONGO_INITDB_ROOT_PASSWORD: mongo123
      MONGO_INITDB_DATABASE: meuapoio
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/test --quiet
      interval: 10s
      timeout: 5s
      retries: 5

  # Cache Redis
  redis:
    image: redis:7-alpine
    container_name: meuapoio-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Adminer para gerenciar PostgreSQL
  adminer:
    image: adminer
    container_name: meuapoio-adminer
    ports:
      - "8080:8080"
    depends_on:
      - postgres

  # Mongo Express para gerenciar MongoDB
  mongo-express:
    image: mongo-express
    container_name: meuapoio-mongo-express
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: mongo
      ME_CONFIG_MONGODB_ADMINPASSWORD: mongo123
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_MONGODB_URL: mongodb://mongo:mongo123@mongodb:27017/
      ME_CONFIG_BASICAUTH: "false"
    ports:
      - "8082:8081"
    depends_on:
      - mongodb

volumes:
  postgres_data:
    driver: local
  mongo_data:
    driver: local
  redis_data:
    driver: local 